type User {
  id: Int!
  username: String!
  email: String!
  pw: String!
}

type Token {
  accessToken: String!
  refreshToken: String!
}

type File {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

type login {
  user: User!
  token: Token!
}

type Character {
  id: Int!
  userid: Int!
  name: String! # 캐릭터명
  characterLink: [File]! # server에 저장된 이미지 경로 리스트.
}

type Community {
  id: Int!
  title: String!
  mainGenre: String! # 주 장르. 여러 장르가 섞일 수 없음.
  smallGenre: String! # 소 장르. 유저가 입력한 소장르.
  type: Int! # 커뮤니티 유형. 1, 2, 3 순서대로 글, 그림, 복합.
}

type ReissuanceTokens {
  id: Int!
  username: String!
  accessToken: String!
  refreshToken: String!
}

type UserCharacter {
  user: User!
  characters: [Character!]
}

scalar Upload

type Query {
  getComu: [Community]!
  getMyInfo(userId: Int!): UserCharacter!
  uploads: [File]
}

type Mutation {
  addUser(username: String!, email: String!, pw: String!): User!
  loginUser(email: String!, pw: String!): [login!]
  reissuanceToken(refreshToken: String!): ReissuanceTokens!
  singleUpload (img: Upload!): File!
  multipleUpload (files: [Upload!]!): [File!]!
}
